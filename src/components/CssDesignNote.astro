---
// CSSShowcaseWithHamburgerMenu.astro
import { getEntry } from 'astro:content';
import {cssExamples} from "./data/cssExamples"


const descriptions = await Promise.all(
  cssExamples.map(async (example) => {
    const entry = await getEntry('descriptions', example.descriptionSlug);
    if (entry) {
      const { Content } = await entry.render();
      return { slug: example.descriptionSlug, Content };
    }
    return null;
  })
);
---

<div class="css-design-showcase-container">
  <header>
    <h1>CSSデザイン帳</h1>
    <button id="hamburger-menu" aria-label="メニューを開く">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </header>

  <nav id="menu">
    <ul>
      {cssExamples.map((example) => (
        <li>
          <a href={`#${example.descriptionSlug}`}>{example.title}</a>
        </li>
      ))}
    </ul>
  </nav>
  
  <main class="css-design-showcase">
    {cssExamples.map((example) => {
      const description = descriptions.find(d => d && d.slug === example.descriptionSlug);
      return (
        <div id={example.descriptionSlug} class="example">
          <h2>{example.title}</h2>
          <div class="description">
            {description && <description.Content />}
          </div>
          <div class="code-result-container">
            <div class="code">
              <h3>CSS:</h3>
              <pre><code>{example.code}</code></pre>
            </div>
            <div class="result">
              <h3>結果:</h3>
              <div class="result-content">
                <style set:html={example.code}></style>
                <div set:html={example.html}></div>
              </div>
            </div>
          </div>
        </div>
      );
    })}
  </main>
</div>

<style>
  .css-design-showcase-container {
    font-family: Arial, sans-serif;
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    width: 100%;
    box-sizing: border-box;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
  }
  .css-design-showcase {
    width: 75%;
  }

  h1 {
    margin: 0;
    font-size: 24px;
  }

  #hamburger-menu {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 10px;
  }

  #hamburger-menu span {
    display: block;
    width: 25px;
    height: 3px;
    background-color: #333;
    margin-bottom: 5px;
    transition: 0.3s;
  }

  #menu {
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
  }

  #menu ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  #menu li {
    margin-bottom: 10px;
  }

  #menu a {
    text-decoration: none;
    color: #333;
    font-weight: bold;
  }

  #menu a:hover {
    color: #3498db;
  }

  .example {
    margin-bottom: 40px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
  }

  h2 {
    background-color: #f5f5f5;
    margin: 0;
    padding: 15px;
    font-size: 20px;
    color: #333;
  }

  .description {
    padding: 20px;
    background-color: #f9f9f9;
  }

  .code-result-container {
    display: flex;
    flex-wrap: wrap;
  }

  .code, .result {
    flex: 1;
    min-width: 100%;
    padding: 20px;
  }

  .code {
    background-color: #f8f8f8;
    border-bottom: 1px solid #e0e0e0;
    overflow-x: auto;
  }

  pre {
    margin: 0;
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow-x: auto;
  }

  code {
    font-family: 'Courier New', Courier, monospace;
    font-size: 14px;
  }

  h3 {
    margin-top: 0;
    color: #666;
  }

  .result-content {
    margin-top: 20px;
    overflow-x: auto;
    max-width: 100%;
  }

  .result-content > div {
    all: revert;
    max-width: 100%;
  }

  @media (min-width: 768px) {
    .css-design-showcase-container {
      display: flex;
      flex-wrap: wrap;
    }

    header {
      width: 100%;
    }

    #menu {
      width: 200px;
      position: sticky;
      top: 20px;
      align-self: flex-start;
      margin-right: 20px;
    }

    .css-design-showcase {
      flex: 1;
    }

    .code, .result {
      min-width: 300px;
    }

    .code {
      border-bottom: none;
      border-right: 1px solid #e0e0e0;
    }
  }

  @media (max-width: 767px) {
    .css-design-showcase-container {
      padding: 10px;
    }

    #hamburger-menu {
      display: block;
    }

    #menu {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(245, 245, 245, 0.95);
      z-index: 1000;
      overflow-y: auto;
    }

    #menu.open {
      display: block;
    }

    #menu ul {
      padding-top: 60px;
    }

    #menu li {
      margin-bottom: 20px;
    }

    #menu a {
      font-size: 18px;
    }

    .code, .result {
      padding: 10px;
    }
  }
</style>

<script>
  const hamburgerMenu = document.getElementById('hamburger-menu');
  const menu = document.getElementById('menu');

  if (hamburgerMenu && menu) {
    hamburgerMenu.addEventListener('click', () => {
      menu.classList.toggle('open');
      hamburgerMenu.classList.toggle('open');
    });

    // メニュー項目がクリックされたときにメニューを閉じる
    document.querySelectorAll('#menu a').forEach(link => {
      link.addEventListener('click', () => {
        menu.classList.remove('open');
        hamburgerMenu.classList.remove('open');
      });
    });
  }

  // スムーズスクロール
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(this: HTMLAnchorElement, e: Event) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (href) {
        const targetElement = document.querySelector(href);
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth'
          });
        }
      }
    });
  });
</script>